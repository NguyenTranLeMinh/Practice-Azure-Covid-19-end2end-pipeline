{
    "name": "df_transform_hospital_admissions",
    "properties": {
        "type": "MappingDataFlow",
        "typeProperties": {
            "sources": [
                {
                    "dataset": {
                        "referenceName": "ds_hospital_admiissions",
                        "type": "DatasetReference"
                    },
                    "name": "HospitalAdmissionsSource"
                },
                {
                    "dataset": {
                        "referenceName": "ds_country_lookup",
                        "type": "DatasetReference"
                    },
                    "name": "CountrySource"
                },
                {
                    "dataset": {
                        "referenceName": "ds_dim_date",
                        "type": "DatasetReference"
                    },
                    "name": "DimDatesource"
                }
            ],
            "sinks": [
                {
                    "dataset": {
                        "referenceName": "ds_processed_hospital_admissions_daily",
                        "type": "DatasetReference"
                    },
                    "name": "sinkDaily"
                },
                {
                    "dataset": {
                        "referenceName": "ds_processed_hospital_admissions_weekly",
                        "type": "DatasetReference"
                    },
                    "name": "sinkWeekly"
                }
            ],
            "transformations": [
                {
                    "name": "select1"
                },
                {
                    "name": "lookupCountry"
                },
                {
                    "name": "splitHospitalAdmissions"
                },
                {
                    "name": "select2"
                },
                {
                    "name": "aggDimDate"
                },
                {
                    "name": "joinDimDate"
                },
                {
                    "name": "pivotIndicator1"
                },
                {
                    "name": "pivotIndicator2"
                },
                {
                    "name": "sortDaily"
                },
                {
                    "name": "sortWeekly"
                }
            ],
            "scriptLines": [
                "source(output(",
                "          country as string,",
                "          indicator as string,",
                "          date as date,",
                "          year_week as string,",
                "          value as double,",
                "          source as string,",
                "          url as string",
                "     ),",
                "     allowSchemaDrift: true,",
                "     validateSchema: false,",
                "     ignoreNoFilesFound: false) ~> HospitalAdmissionsSource",
                "source(output(",
                "          country as string,",
                "          country_code_2_digit as string,",
                "          country_code_3_digit as string,",
                "          continent as string,",
                "          population as integer",
                "     ),",
                "     allowSchemaDrift: true,",
                "     validateSchema: false,",
                "     ignoreNoFilesFound: false) ~> CountrySource",
                "source(output(",
                "          date_key as date,",
                "          date as date,",
                "          year as short,",
                "          month as short,",
                "          day as short,",
                "          day_name as string,",
                "          day_of_year as short,",
                "          week_of_month as short,",
                "          week_of_year as short,",
                "          month_name as string,",
                "          year_month as integer,",
                "          year_week as integer",
                "     ),",
                "     allowSchemaDrift: true,",
                "     validateSchema: false,",
                "     ignoreNoFilesFound: false) ~> DimDatesource",
                "HospitalAdmissionsSource select(mapColumn(",
                "          country,",
                "          indicator,",
                "          reported_date = date,",
                "          reported_year_week = year_week,",
                "          value,",
                "          source",
                "     ),",
                "     skipDuplicateMapInputs: true,",
                "     skipDuplicateMapOutputs: true) ~> select1",
                "select1, CountrySource lookup(select1@country == CountrySource@country,",
                "     multiple: false,",
                "     pickup: 'any',",
                "     broadcast: 'auto')~> lookupCountry",
                "select2 split(startsWith(indicator, \"Daily\"),",
                "     disjoint: true) ~> splitHospitalAdmissions@(Daily, Weekly)",
                "lookupCountry select(mapColumn(",
                "          country = select1@country,",
                "          indicator,",
                "          reported_date,",
                "          reported_year_week,",
                "          value,",
                "          source,",
                "          country = CountrySource@country,",
                "          country_code_2_digit,",
                "          country_code_3_digit,",
                "          population",
                "     ),",
                "     skipDuplicateMapInputs: true,",
                "     skipDuplicateMapOutputs: true) ~> select2",
                "DimDatesource aggregate(groupBy(year_week_ecdc_format = toString(year)+'-W'+lpad(toString(week_of_year),2,'0')),",
                "     week_start_date = min(date),",
                "          week_end_date = max(date)) ~> aggDimDate",
                "splitHospitalAdmissions@Weekly, aggDimDate join(reported_year_week == year_week_ecdc_format,",
                "     joinType:'inner',",
                "     matchType:'exact',",
                "     ignoreSpaces: false,",
                "     broadcast: 'auto')~> joinDimDate",
                "splitHospitalAdmissions@Daily pivot(groupBy(country,",
                "          country_code_2_digit,",
                "          country_code_3_digit,",
                "          reported_date,",
                "          population,",
                "          source),",
                "     pivotBy(indicator, ['Daily hospital occupancy', 'Daily ICU occupancy']),",
                "     count = sum(value),",
                "     columnNaming: '$N_$V',",
                "     lateral: true) ~> pivotIndicator1",
                "joinDimDate pivot(groupBy(country,",
                "          country_code_2_digit,",
                "          country_code_3_digit,",
                "          reported_year_week,",
                "          week_start_date,",
                "          week_end_date,",
                "          population,",
                "          source),",
                "     pivotBy(indicator, ['Weekly new hospital admissions per 100k', 'Weekly new ICU admissions per 100k']),",
                "     count = sum(value),",
                "     columnNaming: '$N_$V',",
                "     lateral: true) ~> pivotIndicator2",
                "pivotIndicator1 sort(desc(reported_date, true),",
                "     asc(country, true)) ~> sortDaily",
                "pivotIndicator2 sort(desc(reported_year_week, true),",
                "     asc(country, true)) ~> sortWeekly",
                "sortDaily sink(allowSchemaDrift: true,",
                "     validateSchema: false,",
                "     umask: 0022,",
                "     preCommands: [],",
                "     postCommands: [],",
                "     skipDuplicateMapInputs: true,",
                "     skipDuplicateMapOutputs: true) ~> sinkDaily",
                "sortWeekly sink(allowSchemaDrift: true,",
                "     validateSchema: false,",
                "     umask: 0022,",
                "     preCommands: [],",
                "     postCommands: [],",
                "     skipDuplicateMapInputs: true,",
                "     skipDuplicateMapOutputs: true) ~> sinkWeekly"
            ]
        }
    }
}